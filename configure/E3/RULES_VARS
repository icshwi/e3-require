# -*- mode: Makefile;-*-

E3_MODULES_VARIABLES:=$(sort $(filter-out $(VARS_EXCLUDES) VARS_EXCLUDES,$(.VARIABLES)))

DEP_MODULES:=$(filter %_DEP_VERSION, $(E3_MODULES_VARIABLES))

LEVEL?=2

.PHONY : vars env header  vers dep _dep1

vars: header
	$(foreach v, $(E3_MODULES_VARIABLES), $(info $(v) = $($(v)))) @#noop

env: vars

header:
	$(QUIET)echo ""
	$(QUIET)echo "------------------------------------------------------------"
	$(QUIET)echo ">>>>     Current EPICS and E3 Envrionment Variables     <<<<"
	$(QUIET)echo "------------------------------------------------------------"
	$(QUIET)echo ""

existent:
ifeq (, $(shell which tree))
	$(QUIET)ls -d $(E3_MODULES_PATH)/$(E3_MODULE_NAME)
	$(QUIET)find $(E3_MODULES_PATH)/$(E3_MODULE_NAME)/ -maxdepth $(LEVEL) | sed -e "s/[^-][^\/]*\// |/g" -e "s/|\([^ ]\)/:---\1/"
else
	$(QUIET)tree -L $(LEVEL) $(E3_MODULES_PATH)/$(E3_MODULE_NAME)
endif

dep: _dep1
	$(foreach v, $(DEP_MODULES), $(info $(v) = $($(v)))) @#noop

_dep1:
	$(QUIET)echo "require $(E3_MODULE_NAME),$(E3_MODULE_VERSION)"
	$(QUIET)echo "< configured ..."


vers:
	$(QUIET)echo "EPICS_MODULE_TAG:=$(EPICS_MODULE_TAG)"
	$(QUIET)echo "E3_MODULE_VERSION:=$(E3_MODULE_VERSION)"

dep3: 
	$(foreach v, $(DEP_MODULES), $(info $(v) = $($(v)))) @#noop
