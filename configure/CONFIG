# (EPICS) EPICS_MODULE_NAME 
# The EPICS community MODULE name. 
# For example, https://github.com/epics-module/devlib2
# devlib2 is EPICS_MODULE_NAME
# 
EPICS_MODULE_NAME:=require

# # (EPICS) EPICS_MODULE_TAG
# # The EPICS community tag number, which we would like to install
# # within ESS EPICS Environment (ESS)

# export EPICS_MODULE_TAG:=require_2_5_3

# (LOCAL) EPICS_MODULE_PATH
# Usually, it is the directory in $(TOP), after cloning the repository
# However, some modules from ESS have the weird directory structure. 
# If one use the cloned directory, one should define the proper source
# directory path in $(ESS_MODULE_MAKEFILE)
export EPICS_MODULE_SRC_PATH:=$(EPICS_MODULE_NAME)



# (LOCAL) ESS_MODULE_MAKEFILE 
# The very strange and additional Makefile for EPICS_MODULE_NAME, which
# should be maintained according to main repository evolving.
# some export variables in CONFIG file 
# in order to build and install for EEE
ESS_MODULE_MAKEFILE:=$(EPICS_MODULE_NAME).Makefile

# (EEE) PROJECT 
# it is the jargon of EEE, the EEE generic makefile uses it
# as the installation directory, and it will be used in the iocsh script
# with the require commands, for    example
# require $(PROJECT),$(LIBVERSION)
export PROJECT:=$(EPICS_MODULE_NAME)



# E3_ENV_NAME
export E3_ENV_NAME:=e3-env
#export E3_ENV_TAG:=v0.1

